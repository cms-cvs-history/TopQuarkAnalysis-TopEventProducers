[CRAB] 
#  Crab.cfg by Freya Blekman, for use with TtSemiLepEvents.cfg
#  tested on CMSSW_1_3_1 and with crab_1_5_2
# for more information on crab and modification of this config file: 
# see the CMS workbook or the crab homepage.

jobtype = cmssw

scheduler = glite


[CMSSW]
# location of dataset, see 
# https://twiki.cern.ch/twiki/bin/view/CMS/TWikiTopQuark#8_Simulated_event_samples_and_Ge
# and also: http://cmsdbs.cern.ch/discovery/
datasetpath=/ttbar_inclusive_TopRex/CMSSW_1_3_1-Spring07-1122/GEN-SIM-DIGI-RECO
# datasetpath=/W3j/CMSSW_1_3_1-Spring07-1553/GEN-SIM-DIGI-RECO
# name of configuration file:
pset=TtSemiLepEventsReco_fromAOD.cfg


total_number_of_events = -1
# modify this to do job splitting. If =1 you will run one job over all events
number_of_jobs = 60

# the name of your output file (make sure this corresponds to your CMSSW output file name as defined in your cmssw .cfg file)
output_file=TtSemiMuEvents.root

[USER]

#actually copy data back to your machine (note that this can only be done with small files...)
return_data=1
# or set return_data to 0 and write to castor or another (similar) storage element
copy_data=0
# storage_element = srm.cern.ch
# Also make sure your dir in castor is readable by other users than you (that is: the grid should have access....)
# for example rfchmod +775 /castor/cern.ch/user/f/fblekman/tests
#storage_path = /castor/cern.ch/user/f/fblekman/tests

# some job monitoring (real time)
use_boss_rt = 1  

# white/black-list storage elements (SE) and computing elements (CE)

#se_black_list=cern
#se_white_list=fnal
#ce_black_list=cern
#ce_white_list=fnal

# make sure crab knows you're in CMS:
virtual_organization=cms

# number of times to retry when job fails
retry_count = 5

# European-Data-Grid specific settings
[EDG]
lfc_host = lfc-cms-test.cern.ch
lcg_catalog_type = lfc
lfc_home = /grid/cms
